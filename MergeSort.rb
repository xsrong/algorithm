# Merge Sort
# 基本思路是递归地将数组拆分，再递归地将各个部分两两归并。归并时如果两边数组都还有元素，则将两边数组中的最小元素进行比较，值较小的元素输出到归并后的数组。如其中一个数组元素用尽，则将另外一个数组整体输出到归并后的数组里。
# 排序轨迹如下：初始数组 = [3, 5, 1, 9, 8, 4, 7, 6, 0, 2]

=begin
[3, 5, 1, 9, 8, 4, 7, 6, 0, 2]    初始数组。
[3, 5, 1, 9, 8, 4, 7, 6, 0, 2]    将数组进行拆分。此时拆分成了[3],[5],[1],[9],[8],[4],[7],[6],[0],[2]10个数组
[3, 5, 1, 9, 8, 4, 7, 6, 0, 2]    归并[3][5]，结果[3,5],[1],[9],[8],[4],[7],[6],[0],[2]
[1, 3, 5, 9, 8, 4, 7, 6, 0, 2]    归并[3,5][1]，结果[1,3,5],[9],[8],[4],[7],[6],[0],[2]
[1, 3, 5, 8, 9, 4, 7, 6, 0, 2]    归并[9,8], 结果[1,3,5],[8,9],[4],[7],[6],[0],[2]
[1, 3, 5, 8, 9, 4, 7, 6, 0, 2]    归并[1,3,5][8,9], 结果[1,3,5,8,9],[4],[7],[6],[0],[2]
[1, 3, 5, 8, 9, 4, 7, 6, 0, 2]    归并[4][7], 结果[1,3,5,8,9],[4,7],[6],[0],[2]
[1, 3, 5, 8, 9, 4, 6, 7, 0, 2]    归并[4,7][6], 结果[1,3,5,8,9],[4,6,7],[0],[2]
[1, 3, 5, 8, 9, 4, 6, 7, 0, 2]    归并[0][2], 结果[1,3,5,8,9],[4,6,7],[0,2]
[1, 3, 5, 8, 9, 0, 2, 4, 6, 7]    归并[4,6,7][0,2], 结果[1,3,5,8,9],[0,2,4,6,7]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]    归并[1,3,5,8,9][0,2,4,6,7], 结果[0,1,2,3,4,5,6,7,8,9]
=end

class MergeSort
  class << self
    def sort arr, lo, hi
      return if lo >= hi
      if lo - hi == 1
        arr[lo], arr[hi] = arr[hi], arr[lo] if arr[lo] > arr[hi]
        return
      else
      mid = lo + (hi - lo) / 2
      sort(arr, lo, mid)        # 将左半部分排序
      sort(arr, mid+1, hi)      # 将右半部分排序
      _merge(arr, lo, mid, hi)  # 将两个半部分归并
      p arr
      end
    end

    def _merge arr, lo, mid, hi
      i, j = lo, mid + 1
      aux = []
      for k in lo..hi          # 将arr复制到aux中
        aux[k] = arr[k]
      end
      for k in lo..hi          # 按照aux中的元素分段归并回arr中
        if i > mid             # 如果左边元素用尽，则将右边元素直接输出到arr
          arr[k] = aux[j]
          j += 1
        elsif j > hi           # 如果右边元素用尽，则将左边元素直接输出到arr
          arr[k] = aux[i]
          i += 1
        elsif aux[i] > aux[j]  # 如果两边元素都未用尽，则将两边的第一个元素比较，输出较小的那个到arr
          arr[k] = aux[j]
          j += 1
        else
          arr[k] = aux[i]
          i += 1
        end
      end
    end
  end
end

a = [3, 5, 1, 9, 8, 4, 7, 6, 0, 2]
p a
MergeSort.sort(a, 0, a.length - 1)
p a